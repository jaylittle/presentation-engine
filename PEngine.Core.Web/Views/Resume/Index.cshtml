@using System;
@using PEngine.Core.Shared.Models
@using PEngine.Core.Web.Models
@using PEngine.Core.Web
@using PEngine.Core.Web.Helpers
@model PEngineGenericRecordModel<ResumeModel>

@{
  int displayPropertyIndex = 0;
}
@if (Model.State.HasAdmin)
{
<div class="panel">
    <div class="panel-right">
        <a class="list-button resume_view_button_edit">[Edit]</a>
    </div>
</div>
}
<div class="resume-container">
  @foreach (var personal in Model.RecordData.Personals)
  {
  <div class="resume-container">
    <span class="form-header-text">@personal.FullName</span>
    @foreach (var displayProperty in personal.DisplayProperties)
    {
      displayPropertyIndex++;
    @(((displayPropertyIndex % 2 == 1) && displayPropertyIndex > 1) ? @Html.Raw("</div>") : "")
    @(((displayPropertyIndex % 2 == 1) && displayPropertyIndex > 0) ? @Html.Raw("<div class=\"resume-row\">") : "")
      <div class="resume-label">@displayProperty.Key</div>
      @switch (displayProperty.Key)
      {
        case "Email":
      <div class="resume-disp-col"><a href='mailto:@displayProperty.Value'>@displayProperty.Value</a></div>
          break;
        case "Web":
      <div class="resume-disp-col"><a href='@displayProperty.Value' target='_blank'>@displayProperty.Value</a></div>
          break;
        default:
      <div class="resume-disp-col">@displayProperty.Value</div>
          break;
      }
    }
  </div>
  }
</div>
@if (Model.RecordData.Objectives != null && Model.RecordData.Objectives.Count > 0)
{
<div class="resume-container">
  @Html.Raw(Rendering.MarkupSubheader("Objective"))
  @foreach (var objective in Model.RecordData.Objectives)
  {
  <div class="resume-container">
    <div class="resume-row">
      <div class="resume-disp">@Html.Raw(Rendering.MarkupArticle(objective.Data, false))</div>
    </div>
  </div>
  }
</div>
}
@if (Model.RecordData.SkillTypes != null && Model.RecordData.SkillTypes.Count > 0)
{
<div class="resume-container">
  @Html.Raw(Rendering.MarkupSubheader("Skills"))
  @foreach (var skillType in Model.RecordData.SkillTypes)
  {
  <div>
    <div class="resume-row">
      <div class="resume-skill-type">
          @skillType.Type
      </div>
      <div class="resumecolb">&nbsp;</div>
    </div>
    <div class="resume-row">
      <div class="resume-skill-container">
        @(string.Join(", ", skillType.Skills.Select(s => s.Name)))
      </div>
    </div>
  </div>
  }
</div>
}
@if (Model.RecordData.WorkHistories != null && Model.RecordData.WorkHistories.Count > 0)
{
<div class="resume-container">
  @Html.Raw(Rendering.MarkupSubheader("Work History"))
  @foreach (var workHistory in Model.RecordData.WorkHistories)
  {
  <div class="resume-container">
    <div class="resume-row">
      <div class="resume-disp">
        <a href='@workHistory.EmployerURL' target='_blank'>@workHistory.Employer</a>
      </div>
    </div>
    <div class="resume-row">
      <div class="resume-label resume-disp">
        @workHistory.JobTitle
      </div>
    </div>
    <div class="resume-row">
      <div class="resume-disp">
        @Rendering.FormatDate(workHistory.Started, false, true)
        <span>&nbsp;-&nbsp;</span>
        @Rendering.FormatDate(workHistory.Completed, false, true)
      </div>
    </div>
    <div class="resume-row">
      <div class="resume-disp">
        @Html.Raw(Rendering.MarkupArticle(workHistory.JobDescription, false))
      </div>
    </div>
  </div>
  }
</div>
}
@if (Model.RecordData.Educations != null && Model.RecordData.Educations.Count > 0)
{
<div class="resume-container">
  @Html.Raw(Rendering.MarkupSubheader("Education"))
  @foreach (var education in Model.RecordData.Educations)
  {
  <div class="resume-container">
    <div class="resume-row">
      <div class="resume-disp"><a href='@education.InstituteURL' target='_blank'>@education.Institute</a></div>
    </div>
    <div class="resume-row">
      <div class="resume-label resume-disp">
        @education.Program
      </div>
    </div>
    <div class="resume-row">
      <div class="resume-disp">
        @Rendering.FormatDate(education.Started, false, true)
        <span>&nbsp;-&nbsp;</span>
        @Rendering.FormatDate(education.Completed, false, true)
      </div>
    </div>
  </div>
  }
</div>
}
<div class="panel">
  <div class="panel-left panel-half">
    <a href="@Model.Settings.ExternalBaseUrl" class="list-button post_view_button_back_to_home">
      [
        @Model.Settings.LabelBackToHomeButton
      ]
    </a>
  </div>
</div>