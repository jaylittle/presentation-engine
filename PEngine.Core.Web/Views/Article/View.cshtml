@using PEngine.Core.Shared.Models
@using PEngine.Core.Web.Models
@using PEngine.Core.Web
@using PEngine.Core.Web.Helpers
@model PEngineGenericRecordModel<ArticleModel>

@{
  var article = Model.RecordData;
  var section = Model.RecordData.Sections.First(s => s.UniqueName.Equals(Model.State.CurrentSection, StringComparison.OrdinalIgnoreCase));
}

<span class="form-header-text">
  @Model.State.SubTitle
</span>
@if ((!article.HideDropDownFlag && article.Sections.Count > 1) || Model.State.HasAdmin)
{
<div class="panel">
  <div class="panel-right">
    @if (Model.State.Links.ContainsKey("Previous"))
    {
      <a href="@Rendering.GetAbsolutePath(Model.State.Links["Previous"])" class="list-button article_view_button_prev">[Prev]</a>
    }
    else
    {
      <a class="list-button article_view_button_prev" style="visibility: hidden">[Prev]</a>
    }
    @if (!article.HideDropDownFlag && article.Sections.Count > 1)
    {
    @Html.Raw("&nbsp;")
    <form method="POST">
      <select name="newSectionUniqueName" class="post_view_dropdown_section" onchange="this.form.submit()" aria-label="Article Section Selector">
      @foreach (var articleSection in Model.RecordData.Sections.OrderBy(o => o.SortOrder).ThenBy(o => o.Name))
      {
        <option value="@articleSection.UniqueName"@(articleSection.Guid == section.Guid ? Html.Raw(" selected") : null)>@articleSection.Name</option>
      }
      </select>
      <input type="submit" id="sectionSubmitTop">
    </form>
    }
    @Html.Raw("&nbsp;")
    @if (Model.State.Links.ContainsKey("Next"))
    {
      <a href="@Rendering.GetAbsolutePath(Model.State.Links["Next"])" class="list-button article_view_button_next">[Next]</a>
    }
    else
    {
      <a class="list-button article_view_button_next" style="visibility: hidden">[Next]</a>
    }
    @Html.Raw("&nbsp;")
    @if (Model.State.HasAdmin)
    {
      <a class="list-button article_view_button_edit" data-guid="@article.Guid">[Edit]</a>
    }
  </div>
</div>
}
<div class="display-container">
  @Html.Raw(Rendering.MarkupArticle(section.Data, false))
</div>
<div class="panel">
  <div class="panel-left panel-half">
    <a href="@Model.Settings.ExternalBaseUrl" class="list-button post_view_button_back_to_home">
      [
        @Model.Settings.LabelBackToHomeButton
      ]
    </a>
  </div>
  <div class="panel-right panel-half">
    @if (Model.State.HasAdmin)
    {
      <a class="list-button article_view_button_edit" data-guid="@article.Guid">[Edit]</a>
    }
    @if (!article.HideDropDownFlag && article.Sections.Count > 1)
    {
      @Html.Raw("&nbsp;")
      if (Model.State.Links.ContainsKey("Previous"))
      {
        <a href="@Rendering.GetAbsolutePath(Model.State.Links["Previous"])" class="list-button article_view_button_prev">[Prev]</a>
        @Html.Raw("&nbsp;")
      }
      <form method="POST">
        <select name="newSectionUniqueName" class="post_view_dropdown_section" onchange="this.form.submit()" aria-label="Article Section Selector">
          @foreach (var articleSection in Model.RecordData.Sections.OrderBy(o => o.SortOrder).ThenBy(o => o.Name))
          {
            <option value="@articleSection.UniqueName"@(articleSection.Guid == section.Guid ? Html.Raw(" selected") : null)>@articleSection.Name</option>
          }
        </select>
        <input type="submit" id="sectionSubmitBottom" />
      </form>
      @Html.Raw("&nbsp;")
      if (Model.State.Links.ContainsKey("Next"))
      {
        <a href="@Rendering.GetAbsolutePath(Model.State.Links["Next"])" class="list-button article_view_button_next">[Next]</a>
      }
      else
      {
        <a class="list-button article_view_button_next" style="visibility: hidden">[Next]</a>
      }
      @Html.Raw("&nbsp;")
    }
  </div>
</div>

@section scripts {
  <script type="text/javascript">
    (function() {
      if (document.getElementById('sectionSubmitTop'))
      {
        document.getElementById('sectionSubmitTop').style.display = 'none';
      }
      if (document.getElementById('sectionSubmitBottom'))
      {
        document.getElementById('sectionSubmitBottom').style.display = 'none';
      }
    })();
  </script>
  }